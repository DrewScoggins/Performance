scenario
{
    name = "MP4/Smooth to Smooth/HLS Scenario";

    warmup = 30;
    duration = 36000;
    cooldown = 180;


   default
    {
        setheader
        {
            name    = "Connection";
            value   = "keep-alive";
        }
        setheader
        {
            name    = "Accept";
            value   = "image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, application/vnd.ms-excel, */*";
        }
        setheader
        {
            name    = "Accept-Language";
            value   = "en-us";
        }
        setheader
        {
            name    = "User-Agent";
            value   = "Mozilla/4.0 (compatible; MSIE 5.01; Windows NT 5.0";
        }

        setheader
        {
            name    = "Host";
            value   = "FAKEHOSTNAME:FAKEPORT";
        }

        version     = HTTP11;
        statuscode  = 200;
        cookies	    = false;
        close       = ka;
    }
    transaction
    {
        id = "Home Controller";
        weight = 100;
       
	request
	{
                id="RequestRandom";
	 	url="/";
                port=FAKEPORT;
	}
        sleep
        {
		delay=FAKEDELAYTIME;
        }
	request
	{
	 	url="/Home/About";
                port=FAKEPORT;
	}
        sleep
        {
		delay=FAKEDELAYTIME;
        }
	request
	{
	 	url="/Home/Contact";
                port=FAKEPORT;
	}
        sleep
        {
		delay=FAKEDELAYTIME;
        }
	request
	{
	 	url="/Home/Error";
                port=FAKEPORT;
	}
        sleep
        {
		delay=FAKEDELAYTIME;
        }

        branch
        {
        	goto
		{
			id = "RequestRandom";
			weight = 100;
		}
		goto
		{
			id = "ClientIdle";
			weight = 1;
		}
        } 
        sleep
        {
		id = "ClientIdle";
        	delay=0;
        }
    }

    transaction
    {
        id = "Account Controller";
        weight = 100;

	request
	{
                id="RequestRandom";
	 	url="/Account/Login";
                port=FAKEPORT;
	}
        sleep
        {
		delay=FAKEDELAYTIME;
        }
	request
	{
	 	url="/Account/Login";
		verb=POST;
		postdata="email=" + rand("0","1000") + "@test.com&Password=123456&RememberMe=true";
                port=FAKEPORT;
	}
        sleep
        {
		delay=FAKEDELAYTIME;
        }
	request
	{
	 	url="/Account/Register";
                port=FAKEPORT;
	}
        sleep
        {
		delay=FAKEDELAYTIME;
        }
	request
	{
	 	url="/Account/Register";
		verb=POST;
		postdata="email=" + rand("0","1000") + "@test.com&Password=123456&ConfirmPassword=123456";
                port=FAKEPORT;
	}
        sleep
        {
		delay=FAKEDELAYTIME;
        }
	request
	{
	 	url="/Account/LogOff";
		verb=POST;
		postdata="";
                port=FAKEPORT;
	}
        sleep
        {
		delay=FAKEDELAYTIME;
        }
	request
	{
	 	url="/Account/ExternalLogin";
		verb=POST;
		postdata="provider=testprovider";
                port=FAKEPORT;
	}
        sleep
        {
		delay=FAKEDELAYTIME;
        }
	request
	{
	 	url="/Account/ExternalLoginCallback";
                port=FAKEPORT;
	}
        sleep
        {
		delay=FAKEDELAYTIME;
        }
	request
	{
	 	url="/Account/ExternalLoginConfirmation";
		verb=POST;
		postdata="email=" + rand("0","1000") + "@test.com";
                port=FAKEPORT;
	}
        sleep
        {
		delay=FAKEDELAYTIME;
        }
	request
	{
	 	url="/Account/ConfirmEmail?userId=testid&code=testcode";
                port=FAKEPORT;
	}
        sleep
        {
		delay=FAKEDELAYTIME;
        }
	request
	{
	 	url="/Account/ForgotPassword";
                port=FAKEPORT;
	}
        sleep
        {
		delay=FAKEDELAYTIME;
        }
	request
	{
	 	url="/Account/ForgotPassword";
		verb=POST;
		postdata="email=" + rand("0","1000") + "@test.com";
                port=FAKEPORT;
	}
        sleep
        {
		delay=FAKEDELAYTIME;
        }
	request
	{
	 	url="/Account/ForgotPasswordConfirmation";
                port=FAKEPORT;
	}
        sleep
        {
		delay=FAKEDELAYTIME;
        }
	request
	{
	 	url="/Account/ResetPassword?code=testcode";
                port=FAKEPORT;
	}
        sleep
        {
		delay=FAKEDELAYTIME;
        }
	request
	{
	 	url="/Account/ResetPassword";
		verb=POST;
		postdata="email=" + rand("0","1000") + "@test.com&Password=123456&ConfirmPassword=123456&code=testcode";
                port=FAKEPORT;
	}
        sleep
        {
		delay=FAKEDELAYTIME;
        }
	request
	{
	 	url="/Account/ResetPasswordConfirmation";
                port=FAKEPORT;
	}
        sleep
        {
		delay=FAKEDELAYTIME;
        }
	request
	{
	 	url="/Account/SendCode";
                port=FAKEPORT;
	}
        sleep
        {
		delay=FAKEDELAYTIME;
        }
	request
	{
	 	url="/Account/SendCode";
		verb=POST;
		postdata="selectedProvider=testprovider&returnurl=testurl&rememberme=false";
                port=FAKEPORT;
	}
        sleep
        {
		delay=FAKEDELAYTIME;
        }
	request
	{
	 	url="/Account/VerifyCode";
                port=FAKEPORT;
	}
        sleep
        {
		delay=FAKEDELAYTIME;
        }
	request
	{
	 	url="/Account/VerifyCode";
		verb=POST;
		postdata="provider=testprovider&code=testcode&returnurl=testurl&rememberme=false&rememberbrowser=true";
                port=FAKEPORT;
	}
        sleep
        {
		delay=FAKEDELAYTIME;
        }
        branch
        {
        	goto
		{
			id = "RequestRandom";
			weight = 100;
		}
		goto
		{
			id = "ClientIdle";
			weight = 1;
		}
        } 
        sleep
        {
		id = "ClientIdle";
        	delay=0;
        }
    }

    transaction
    {
        id = "Manage Controller";
        weight = 100;

	request
	{
                id="RequestRandom";
	 	url="/Manage";
                port=FAKEPORT;
	}
        sleep
        {
		delay=FAKEDELAYTIME;
        }
	request
	{
	 	url="/Manage/RemoveLogin";
		verb=POST;
		postdata="loginprovider=testprovider&providerkey=testkey";
                port=FAKEPORT;
                statuscode=302;               //we can use redirect=true to follow redirection. However wcat has a bug to always redirect to :80 port
	}
        sleep
        {
		delay=FAKEDELAYTIME;
        }
	request
	{
	 	url="/Manage/AddPhoneNumber";
                port=FAKEPORT;
	}
        sleep
        {
		delay=FAKEDELAYTIME;
        }
	request
	{
	 	url="/Manage/AddPhoneNumber";
		verb=POST;
		postdata="phonenumber=" + rand("10000","20000");
                port=FAKEPORT;
	}
        sleep
        {
		delay=FAKEDELAYTIME;
        }
	request
	{
	 	url="/Manage/EnableTwoFactorAuthentication";
		verb=POST;
		postdata="";
                port=FAKEPORT;
                statuscode=302;               //we can use redirect=true to follow redirection. However wcat has a bug to always redirect to :80 port
	}
        sleep
        {
		delay=FAKEDELAYTIME;
        }
	request
	{
	 	url="/Manage/DisableTwoFactorAuthentication";
		verb=POST;
		postdata="";
                port=FAKEPORT;
                statuscode=302;               //we can use redirect=true to follow redirection. However wcat has a bug to always redirect to :80 port
	}
        sleep
        {
		delay=FAKEDELAYTIME;
        }
	request
	{
	 	url="/Manage/VerifyPhoneNumber?phoneNumber=123456";
                port=FAKEPORT;
	}
        sleep
        {
		delay=FAKEDELAYTIME;
        }
	request
	{
	 	url="/Manage/VerifyPhoneNumber";
		verb=POST;
		postdata="code=123&phoneNumber=123456";
                port=FAKEPORT;
	}
        sleep
        {
		delay=FAKEDELAYTIME;
        }
	request
	{
	 	url="/Manage/RemovePhoneNumber";
                port=FAKEPORT;
	}
        sleep
        {
		delay=FAKEDELAYTIME;
        }
	request
	{
	 	url="/Manage/ChangePassword";
                port=FAKEPORT;
	}
        sleep
        {
		delay=FAKEDELAYTIME;
        }
	request
	{
	 	url="/Manage/ChangePassword";
		verb=POST;
		postdata="oldPassword=123666&newPassword=123456&confirmPassword=123456";
                port=FAKEPORT;
	}
        sleep
        {
		delay=FAKEDELAYTIME;
        }
	request
	{
	 	url="/Manage/SetPassword";
                port=FAKEPORT;
	}
        sleep
        {
		delay=FAKEDELAYTIME;
        }
	request
	{
	 	url="/Manage/SetPassword";
		verb=POST;
		postdata="newPassword=123456&confirmPassword=123456";
                port=FAKEPORT;
	}
        sleep
        {
		delay=FAKEDELAYTIME;
        }
	request
	{
	 	url="/Manage/ManageLogins?ManageMessageId=1";
                port=FAKEPORT;
	}
        sleep
        {
		delay=FAKEDELAYTIME;
        }
	request
	{
	 	url="/Manage/LinkLogin";
		verb=POST;
		postdata="provider=testprovider";
                port=FAKEPORT;
                statuscode=302;               //we can use redirect=true to follow redirection. However wcat has a bug to always redirect to :80 port
	}
        sleep
        {
		delay=FAKEDELAYTIME;
        }
	request
	{
	 	url="/Manage/LinkLoginCallback";
                port=FAKEPORT;
                statuscode=302;               //we can use redirect=true to follow redirection. However wcat has a bug to always redirect to :80 port
	}
        sleep
        {
		delay=FAKEDELAYTIME;
        }

        branch
        {
        	goto
		{
			id = "RequestRandom";
			weight = 100;
		}
		goto
		{
			id = "ClientIdle";
			weight = 1;
		}
        } 
        sleep
        {
		id = "ClientIdle";
        	delay=0;
        }      
    }


    transaction
    {
        id = "TextContent Controller";
        weight = 100;

	request
	{
                id="RequestRandom";
	 	url="/TextContent/Get500B";
                port=FAKEPORT;
	}
        sleep
        {
		delay=FAKEDELAYTIME;
        }
	request
	{
	 	url="/TextContent/Get2KB";
                port=FAKEPORT;
	}
        sleep
        {
		delay=FAKEDELAYTIME;
        }
	request
	{
	 	url="/TextContent/Get500KB";
                port=FAKEPORT;
	}
        sleep
        {
		delay=FAKEDELAYTIME;
        }
	request
	{
	 	url="/TextContent/GetContent?size=1000000";
                port=FAKEPORT;
	}
	request
	{
	 	url="/TextContent/GetContent?size=3000000";
                port=FAKEPORT;
	}
        sleep
        {
		delay=FAKEDELAYTIME;
        }
	request
	{
		url="/TextContent/GetContent?size=8000000";
                port=FAKEPORT;
	}
        sleep
        {
		delay=FAKEDELAYTIME;
        }
	request
	{
	 	url="/TextContent/AddContent";
		verb=POST;
		postdata="content="+<testdatasmall.data>;
                port=FAKEPORT;
                statuscode=201;
	}
        sleep
        {
		delay=FAKEDELAYTIME;
        }
        request
        {
                url="/TextContent/AddContent";
                setheader
                {
                    name = "Content-Type";
                    value = "multipart/form-data; boundary=FAKEBOUNDARY";
                }
                verb=POST;
                postdata=<testdata_multipartform.data>;
                port=FAKEPORT;
                statuscode=201;
        }
        sleep
        {
                delay=FAKEDELAYTIME;
        }
	request
	{
	 	url="/TextContent/Get500B";
                port=FAKEPORT;
	}
        sleep
        {
		delay=FAKEDELAYTIME;
        }
	request
	{
	 	url="/TextContent/Get2KB";
                port=FAKEPORT;
	}
        sleep
        {
		delay=FAKEDELAYTIME;
        }
	request
	{
	 	url="/TextContent/Get500KB";
                port=FAKEPORT;
	}
        sleep
        {
		delay=FAKEDELAYTIME;
        }
	request
	{
	 	url="/TextContent/GetContent?size=1000000";
                port=FAKEPORT;
	}
        sleep
        {
		delay=FAKEDELAYTIME;
        }
	request
	{
	 	url="/TextContent/GetContent?size=3000000";
                port=FAKEPORT;
	}
        sleep
        {
		delay=FAKEDELAYTIME;
        }
	request
	{
		url="/TextContent/GetContent?size=8000000";
                port=FAKEPORT;
	}
        sleep
        {
		delay=FAKEDELAYTIME;
        }
	request
	{
	 	url="/TextContent/AddContent";
		verb=POST;
		postdata="content="+<testdatasmall.data>;
                port=FAKEPORT;
                statuscode=201;
	}
        sleep
        {
		delay=FAKEDELAYTIME;
        }
	request
	{
	 	url="/TextContent/AddContent";
		verb=POST;
		postdata="content="+<testdatalarge.data>;
                port=FAKEPORT;
                statuscode=201;
	}
        sleep
        {
		delay=FAKEDELAYTIME;
        }
        request
        {
                url="/TextContent/AddContent";
                setheader
                {
                    name = "Content-Type";
                    value = "multipart/form-data; boundary=FAKEBOUNDARY";
                }
                verb=POST;
                postdata=<testdata_multipartform.data>;
                port=FAKEPORT;
                statuscode=201;
        }
        sleep
        {
                delay=FAKEDELAYTIME;
        }
        branch
        {
        	goto
		{
			id = "RequestRandom";
			weight = 100;
		}
		goto
		{
			id = "ClientIdle";
			weight = 1;
		}
        } 
        sleep
        {
		id = "ClientIdle";
        	delay=0;
        }      
    }


    transaction
    {
        id = "JsonContent Controller";
        weight = 100;

	request
	{
                id="RequestRandom";
	 	url="/JsonContent/GetObjects?count=1";
                port=FAKEPORT;
	}
        sleep
        {
		delay=FAKEDELAYTIME;
        }
	request
	{
	 	url="/JsonContent/GetObjects?count=10";
                port=FAKEPORT;
	}
        sleep
        {
		delay=FAKEDELAYTIME;
        }
	request
	{
	 	url="/JsonContent/GetObjects?count=100";
                port=FAKEPORT;
	}
        sleep
        {
		delay=FAKEDELAYTIME;
        }
	request
	{
	 	url="/JsonContent/GetObjects?count=1000";
                port=FAKEPORT;
	}
        sleep
        {
		delay=FAKEDELAYTIME;
        }
	request
	{
	 	url="/JsonContent/AddObjects";
                port=FAKEPORT;
		verb=POST;
		postdata="objects=" + <testjsonsmall.data>;
                statuscode=201;
	}
        sleep
        {
		delay=FAKEDELAYTIME;
        }
	request
	{
	 	url="/JsonContent/AddObjects";
                port=FAKEPORT;
		verb=POST;
		postdata="objects=" + <testjsonsmall.data>;
                statuscode=201;
	}
        sleep
        {
		delay=FAKEDELAYTIME;
        }
	request
	{
	 	url="/JsonContent/AddObjects";
                port=FAKEPORT;
		verb=POST;
		postdata="objects=" + <testjsonlarge.data>;
                statuscode=201;
	}
        sleep
        {
		delay=FAKEDELAYTIME;
        }

        branch
        {
        	goto
		{
			id = "RequestRandom";
			weight = 100;
		}
		goto
		{
			id = "ClientIdle";
			weight = 1;
		}
        } 
        sleep
        {
		id = "ClientIdle";
        	delay=0;
        }      
    }
}

